{"ast":null,"code":"var _jsxFileName = \"/Users/michaelliebs/pa04-bananaboys/client/src/components/QuestionDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionDetails = ({\n  questionId,\n  onAskQuestionClick,\n  onAnswerQuestionClick\n}) => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const transformTextToHyperlinks = text => {\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\(([^\\s)]*)\\)/g;\n    return text.replace(hyperlinkRegex, (match, linkText, url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${linkText}</a>`);\n  };\n  const createMarkup = htmlString => {\n    return {\n      __html: htmlString\n    };\n  };\n  useEffect(() => {\n    const fetchQuestionDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/questions/${questionId}`);\n        const data = response.data;\n\n        // Sort answers by date, newest first\n        data.answers.sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n        setQuestion(response.data);\n      } catch (error) {\n        console.error('Error fetching question details:', error);\n      }\n    };\n    fetchQuestionDetails();\n  }, [questionId]);\n  if (!question) return /*#__PURE__*/_jsxDEV(\"div\", {\n    div: true,\n    children: \"Loading question details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 25\n  }, this);\n\n  // Function to calculate the time ago from the date posted\n  const getTimeAgo = datePosted => {\n    const now = new Date();\n    const postedDate = new Date(datePosted);\n    const secondsAgo = Math.floor((now - postedDate) / 1000); // Total seconds ago\n    const minutesAgo = Math.floor(secondsAgo / 60); // Total minutes ago\n    const hoursAgo = Math.floor(minutesAgo / 60); // Total hours ago\n    const daysAgo = Math.floor(hoursAgo / 24); // Total days ago\n    const yearsAgo = now.getFullYear() - postedDate.getFullYear();\n    if (yearsAgo > 0) {\n      return `${postedDate.toLocaleDateString(\"en-US\", {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      })} at ${postedDate.toLocaleTimeString(\"en-US\", {\n        hour: '2-digit',\n        minute: '2-digit'\n      })}`;\n    } else if (daysAgo >= 1) {\n      return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n    } else if (hoursAgo >= 1) {\n      const remainingMinutes = minutesAgo % 60;\n      return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} and ${remainingMinutes} minute${remainingMinutes > 1 ? 's' : ''} ago`;\n    } else if (minutesAgo >= 1) {\n      const remainingSeconds = secondsAgo % 60;\n      return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} and ${remainingSeconds} second${remainingSeconds > 1 ? 's' : ''} ago`;\n    } else {\n      return `${secondsAgo} seconds ago`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-details-container\",\n    id: \"question-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-details-inner\",\n      id: \"question-details-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-details-inner-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-views-and-answers\",\n          children: [question.answers.length, \" answers \", question.views, \" views\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ask-question-answer-pg\",\n          onClick: onAskQuestionClick,\n          children: \"Ask Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-title-answer-pg\",\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-text\",\n        dangerouslySetInnerHTML: createMarkup(transformTextToHyperlinks(question.text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: 'red'\n          },\n          children: question.asked_by\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), ' ', \"asked \", getTimeAgo(question.ask_date_time)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-answers\",\n      id: \"question-answers\",\n      children: question.answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: createMarkup(transformTextToHyperlinks(answer.text))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              color: 'green'\n            },\n            children: answer.ans_by\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), ' ', \"answered \", getTimeAgo(answer.ans_date_time)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, answer._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ask-question\",\n      onClick: onAnswerQuestionClick,\n      children: \"Answer Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDetails, \"jkzQ0biZ4GnZGnzTQ9yw0/I6d2s=\");\n_c = QuestionDetails;\nexport default QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","QuestionDetails","questionId","onAskQuestionClick","onAnswerQuestionClick","_s","question","setQuestion","transformTextToHyperlinks","text","hyperlinkRegex","replace","match","linkText","url","createMarkup","htmlString","__html","fetchQuestionDetails","response","get","data","answers","sort","a","b","Date","ans_date_time","error","console","div","children","fileName","_jsxFileName","lineNumber","columnNumber","getTimeAgo","datePosted","now","postedDate","secondsAgo","Math","floor","minutesAgo","hoursAgo","daysAgo","yearsAgo","getFullYear","toLocaleDateString","month","day","year","toLocaleTimeString","hour","minute","remainingMinutes","remainingSeconds","className","id","length","views","onClick","title","dangerouslySetInnerHTML","style","color","asked_by","ask_date_time","map","answer","ans_by","_id","_c","$RefreshReg$"],"sources":["/Users/michaelliebs/pa04-bananaboys/client/src/components/QuestionDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\n\nconst QuestionDetails = ({ questionId, onAskQuestionClick, onAnswerQuestionClick }) => {\n  const [question, setQuestion] = useState(null);\n  \n  const transformTextToHyperlinks = (text) => {\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\(([^\\s)]*)\\)/g;\n    return text.replace(hyperlinkRegex, (match, linkText, url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${linkText}</a>`);\n  };\n\n  const createMarkup = (htmlString) => {\n    return { __html: htmlString };\n  };\n  \n  useEffect(() => {\n    const fetchQuestionDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/questions/${questionId}`);\n        const data = response.data;\n\n        // Sort answers by date, newest first\n        data.answers.sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n        setQuestion(response.data);\n      } catch (error) {\n        console.error('Error fetching question details:', error);\n      }\n    };\n    fetchQuestionDetails();\n  }, [questionId]);\n\n  if (!question) return <div div>Loading question details...</div>;\n\n   // Function to calculate the time ago from the date posted\n   const getTimeAgo = (datePosted) => {\n    const now = new Date();\n    const postedDate = new Date(datePosted);\n    const secondsAgo = Math.floor((now - postedDate) / 1000); // Total seconds ago\n    const minutesAgo = Math.floor(secondsAgo / 60); // Total minutes ago\n    const hoursAgo = Math.floor(minutesAgo / 60); // Total hours ago\n    const daysAgo = Math.floor(hoursAgo / 24); // Total days ago\n    const yearsAgo = now.getFullYear() - postedDate.getFullYear();\n\n    if (yearsAgo > 0) {\n      return `${postedDate.toLocaleDateString(\"en-US\", { month: 'short', day: 'numeric', year: 'numeric' })} at ${postedDate.toLocaleTimeString(\"en-US\", { hour: '2-digit', minute: '2-digit' })}`;\n    } else if (daysAgo >= 1) {\n      return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n    } else if (hoursAgo >= 1) {\n      const remainingMinutes = minutesAgo % 60;\n      return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} and ${remainingMinutes} minute${remainingMinutes > 1 ? 's' : ''} ago`;\n    } else if (minutesAgo >= 1) {\n      const remainingSeconds = secondsAgo % 60;\n      return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} and ${remainingSeconds} second${remainingSeconds > 1 ? 's' : ''} ago`;\n    } else {\n      return `${secondsAgo} seconds ago`;\n    }\n  };\n\n\n  return (\n    <div className=\"question-details-container\" id=\"question-details-container\">\n      <div className=\"question-details-inner\" id=\"question-details-inner\">\n        <div className='question-details-inner-header'>\n          <p className=\"question-views-and-answers\">\n            {question.answers.length} answers {question.views} views\n          </p>\n          <button className=\"ask-question-answer-pg\" onClick={onAskQuestionClick}>\n            Ask Question\n          </button>\n        </div>\n        <h2 className=\"question-title-answer-pg\">{question.title}</h2>\n        <p className=\"question-text\" dangerouslySetInnerHTML={createMarkup(transformTextToHyperlinks(question.text))}></p>\n        <p className=\"question-meta\">\n          <strong style={{ color: 'red' }}>{question.asked_by}</strong>{' '}\n          asked {getTimeAgo(question.ask_date_time)}\n        </p>\n\n      </div>\n      <div className=\"question-answers\" id=\"question-answers\">\n        {question.answers.map(answer => (\n          <div className=\"answer\" key={answer._id}>\n            <p dangerouslySetInnerHTML={createMarkup(transformTextToHyperlinks(answer.text))}></p>\n            <p>\n              <strong style={{ color: 'green' }}>{answer.ans_by}</strong>{' '}\n              answered {getTimeAgo(answer.ans_date_time)}\n            </p>\n          </div>\n        ))}\n      </div>\n      <button className=\"ask-question\" onClick={onAnswerQuestionClick}>\n      Answer Question\n      </button>\n    </div>\n  );\n};\n\nexport default QuestionDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}