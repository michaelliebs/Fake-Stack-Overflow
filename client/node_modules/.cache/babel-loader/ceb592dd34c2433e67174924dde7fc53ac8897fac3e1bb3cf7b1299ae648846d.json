{"ast":null,"code":"var _jsxFileName = \"/Users/michaelliebs/pa04-bananaboys/client/src/components/QuestionList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionList({\n  onQuestionClick,\n  currentFilter,\n  questions: externalQuestions\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const sortQuestionsByActivity = useCallback(questionsArray => {\n    return questionsArray.sort((a, b) => {\n      const getLastActivityDate = answers => answers.reduce((latest, answer) => {\n        const answerDate = new Date(answer.ans_date_time);\n        return answerDate > latest ? answerDate : latest;\n      }, new Date(0));\n      let lastActivityA = getLastActivityDate(a.answers);\n      let lastActivityB = getLastActivityDate(b.answers);\n      return lastActivityB - lastActivityA;\n    });\n  }, []);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/questions');\n        let filteredQuestions = [...response.data];\n        // Sort questions based on the current filter\n        if (currentFilter === 'newest') {\n          filteredQuestions.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n        } else if (currentFilter === 'active') {\n          filteredQuestions = sortQuestionsByActivity(filteredQuestions);\n        } else if (currentFilter === 'unanswered') {\n          // Filter questions to show only those without answers\n          filteredQuestions.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n          filteredQuestions = filteredQuestions.filter(question => question.answers.length === 0);\n        }\n        setQuestions(filteredQuestions);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    if (externalQuestions) {\n      setQuestions(externalQuestions);\n    } else {\n      fetchQuestions();\n    }\n  }, [currentFilter, externalQuestions, sortQuestionsByActivity]);\n  const incrementViewCount = async questionId => {\n    try {\n      const response = await axios.put(`http://localhost:8000/questions/${questionId}/increment-view`);\n      return response.data;\n    } catch (error) {\n      console.error('Error incrementing view count:', error);\n    }\n  };\n  const handleQuestionClick = async questionId => {\n    await incrementViewCount(questionId);\n    onQuestionClick(questionId);\n  };\n\n  // Function to calculate the time ago from the date posted\n  const getTimeAgo = datePosted => {\n    const now = new Date();\n    const postedDate = new Date(datePosted);\n    const secondsAgo = Math.floor((now - postedDate) / 1000); // Total seconds ago\n    const minutesAgo = Math.floor(secondsAgo / 60); // Total minutes ago\n    const hoursAgo = Math.floor(minutesAgo / 60); // Total hours ago\n    const daysAgo = Math.floor(hoursAgo / 24); // Total days ago\n    const yearsAgo = now.getFullYear() - postedDate.getFullYear();\n    if (yearsAgo > 0) {\n      return `${postedDate.toLocaleDateString(\"en-US\", {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      })} at ${postedDate.toLocaleTimeString(\"en-US\", {\n        hour: '2-digit',\n        minute: '2-digit'\n      })}`;\n    } else if (daysAgo >= 1) {\n      return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n    } else if (hoursAgo >= 1) {\n      const remainingMinutes = minutesAgo % 60;\n      return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} and ${remainingMinutes} minute${remainingMinutes > 1 ? 's' : ''} ago`;\n    } else if (minutesAgo >= 1) {\n      const remainingSeconds = secondsAgo % 60;\n      return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} and ${remainingSeconds} second${remainingSeconds > 1 ? 's' : ''} ago`;\n    } else {\n      return `${secondsAgo} seconds ago`;\n    }\n  };\n  const renderQuestions = () => {\n    if (questions.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          padding: '15px'\n        },\n        children: \"No Questions Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this);\n    }\n    return questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"question-item\",\n      onClick: () => {\n        handleQuestionClick(question._id);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-answers\",\n          children: [`${question.answers.length}`, \" answers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-views\",\n          children: `${question.views} views`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-title\",\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-tags\",\n        children: question.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"question-tag\",\n          children: tag.name\n        }, tag._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-askedBy\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: question.asked_by\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), \" asked \", getTimeAgo(question.ask_date_time)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, question._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderQuestions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionList, \"U4QGjE1rvNdtzLJoQiLJGVyndns=\");\n_c = QuestionList;\nexport default QuestionList;\nvar _c;\n$RefreshReg$(_c, \"QuestionList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","QuestionList","onQuestionClick","currentFilter","questions","externalQuestions","_s","setQuestions","sortQuestionsByActivity","questionsArray","sort","a","b","getLastActivityDate","answers","reduce","latest","answer","answerDate","Date","ans_date_time","lastActivityA","lastActivityB","fetchQuestions","response","get","filteredQuestions","data","ask_date_time","filter","question","length","error","console","incrementViewCount","questionId","put","handleQuestionClick","getTimeAgo","datePosted","now","postedDate","secondsAgo","Math","floor","minutesAgo","hoursAgo","daysAgo","yearsAgo","getFullYear","toLocaleDateString","month","day","year","toLocaleTimeString","hour","minute","remainingMinutes","remainingSeconds","renderQuestions","style","fontWeight","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","onClick","_id","views","title","tags","tag","name","color","asked_by","_c","$RefreshReg$"],"sources":["/Users/michaelliebs/pa04-bananaboys/client/src/components/QuestionList.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\n\nfunction QuestionList({ onQuestionClick, currentFilter, questions: externalQuestions }) {\n  const [questions, setQuestions] = useState([]);\n\n  const sortQuestionsByActivity = useCallback((questionsArray) => {\n    return questionsArray.sort((a, b) => {\n      const getLastActivityDate = (answers) => answers.reduce((latest, answer) => {\n        const answerDate = new Date(answer.ans_date_time);\n        return answerDate > latest ? answerDate : latest;\n      }, new Date(0));\n\n      let lastActivityA = getLastActivityDate(a.answers);\n      let lastActivityB = getLastActivityDate(b.answers);\n\n      return lastActivityB - lastActivityA;\n    });\n  }, []);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/questions');\n        let filteredQuestions = [...response.data];\n        // Sort questions based on the current filter\n        if (currentFilter === 'newest') {\n          filteredQuestions.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n        } else if (currentFilter === 'active') {\n          filteredQuestions = sortQuestionsByActivity(filteredQuestions);\n        } else if (currentFilter === 'unanswered') {\n          // Filter questions to show only those without answers\n          filteredQuestions.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n          filteredQuestions = filteredQuestions.filter(question => question.answers.length === 0);\n        }\n        setQuestions(filteredQuestions);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n    if (externalQuestions) {\n      setQuestions(externalQuestions);\n    } else {\n      fetchQuestions();\n    }  \n  }, [currentFilter, externalQuestions, sortQuestionsByActivity]);\n\n  const incrementViewCount = async (questionId) => {\n  try {\n    const response = await axios.put(`http://localhost:8000/questions/${questionId}/increment-view`);\n    return response.data;\n  } catch (error) {\n    console.error('Error incrementing view count:', error);\n  }\n};\n\n  const handleQuestionClick = async (questionId) => {\n    await incrementViewCount(questionId);\n    onQuestionClick(questionId); \n  };\n\n  // Function to calculate the time ago from the date posted\n  const getTimeAgo = (datePosted) => {\n    const now = new Date();\n    const postedDate = new Date(datePosted);\n    const secondsAgo = Math.floor((now - postedDate) / 1000); // Total seconds ago\n    const minutesAgo = Math.floor(secondsAgo / 60); // Total minutes ago\n    const hoursAgo = Math.floor(minutesAgo / 60); // Total hours ago\n    const daysAgo = Math.floor(hoursAgo / 24); // Total days ago\n    const yearsAgo = now.getFullYear() - postedDate.getFullYear();\n\n    if (yearsAgo > 0) {\n      return `${postedDate.toLocaleDateString(\"en-US\", { month: 'short', day: 'numeric', year: 'numeric' })} at ${postedDate.toLocaleTimeString(\"en-US\", { hour: '2-digit', minute: '2-digit' })}`;\n    } else if (daysAgo >= 1) {\n      return `${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n    } else if (hoursAgo >= 1) {\n      const remainingMinutes = minutesAgo % 60;\n      return `${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} and ${remainingMinutes} minute${remainingMinutes > 1 ? 's' : ''} ago`;\n    } else if (minutesAgo >= 1) {\n      const remainingSeconds = secondsAgo % 60;\n      return `${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} and ${remainingSeconds} second${remainingSeconds > 1 ? 's' : ''} ago`;\n    } else {\n      return `${secondsAgo} seconds ago`;\n    }\n  };\n\n  const renderQuestions = () => {\n    if (questions.length === 0) {\n      return <div style={{ fontWeight: 'bold', padding: '15px' }}>No Questions Found</div>;\n    }\n\n    return questions.map((question) => (\n      <li\n        className=\"question-item\"\n        key={question._id}\n        onClick={() => {\n          handleQuestionClick(question._id);\n        }}\n      >\n        <div className=\"question-details\">\n          <div className=\"question-answers\">{`${question.answers.length}`} answers</div>\n          <div className=\"question-views\">{`${question.views} views`}</div>\n        </div>\n        <h3 className=\"question-title\">{question.title}</h3>\n        <div className=\"question-tags\">\n          {question.tags.map((tag) => (\n            <span key={tag._id} className=\"question-tag\">{tag.name}</span>\n          ))}\n        </div>\n        <div className=\"question-askedBy\">\n          <span style={{ color: 'red' }}>{question.asked_by}</span> asked {getTimeAgo(question.ask_date_time)}\n        </div>\n      </li>\n    ));\n  };\n\n  return (\n    <div className=\"questions-list\">\n      <ul>{renderQuestions()}</ul>\n    </div>\n  );\n}\n\nexport default QuestionList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}