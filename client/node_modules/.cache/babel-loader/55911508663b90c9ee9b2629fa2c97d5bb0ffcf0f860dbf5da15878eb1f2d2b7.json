{"ast":null,"code":"var _jsxFileName = \"/Users/michaelliebs/pa04-bananaboys/client/src/components/NewQuestionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewQuestionForm({\n  onQuestionPosted\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [text, setText] = useState('');\n  const [tags, setTags] = useState('');\n  const [username, setUsername] = useState('');\n  const [errors, setErrors] = useState({});\n  const {\n    user\n  } = useContext(UserContext);\n  const validateForm = () => {\n    let isValid = true;\n    let errors = {};\n    if (!title || title.length > 50) {\n      errors.title = 'The question title cannot be empty and should not exceed 50 characters.';\n      isValid = false;\n    }\n    if (!summary || summary.length > 140) {\n      errors.summary = 'The question summary cannot be empty and should not exceed 140 characters.';\n      isValid = false;\n    }\n    if (!text) {\n      errors.text = 'The question text cannot be empty.';\n      isValid = false;\n    }\n    const tagList = tags.split(/\\s+/);\n    if (!tags || tagList.length > 5 || tagList.some(tag => tag.length > 20 || tag.split('-').length > 2)) {\n      errors.tags = 'Cannot be empty. No more than 5 tags, each not exceeding 20 characters. Hyphenated words count as one word.';\n      isValid = false;\n    }\n\n    //hyperlinks validation check\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\(([^\\s)]*)\\)/g;\n    const matches = [...text.matchAll(hyperlinkRegex)];\n    const invalidLinks = matches.filter(match => {\n      const text = match[1];\n      const url = match[2];\n      return text === '' || !url.startsWith('http://') && !url.startsWith('https://');\n    });\n    if (invalidLinks.length > 0) {\n      errors.text = (errors.text || '') + ' All hyperlinks must start with \"http://\" or \"https://\" and must not be empty.';\n      isValid = false;\n    }\n    setErrors(errors);\n    return isValid;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (validateForm()) {\n      const questionData = {\n        title: title,\n        summary: summary,\n        text: text,\n        tags: tags.split(/\\s+/),\n        asked_by: username\n      };\n      try {\n        await axios.post('http://localhost:8000/questions', questionData);\n        onQuestionPosted();\n      } catch (error) {\n        console.error('Error posting question:', error);\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          form: 'Failed to post the question.'\n        }));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"new-question-container\",\n    className: \"new-question-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question-title\",\n        children: \"Question Title*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"question-title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Limit title to 50 characters or less\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question-summary\",\n        children: \"Question Summary*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        id: \"question-summary\",\n        value: summary,\n        onChange: e => setSummary(e.target.value),\n        placeholder: \"Limit summary to 140 characters or less\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), errors.summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question-text\",\n        children: \"Question Text*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"question-text\",\n        value: text,\n        onChange: e => {\n          setText(e.target.value);\n          setUsername(user.username);\n        },\n        placeholder: \"Add details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), errors.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question-tags\",\n        children: \"Tags*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"question-tags\",\n        value: tags,\n        onChange: e => setTags(e.target.value),\n        placeholder: \"Add keywords separated by whitespace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), errors.tags && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"post-question\",\n        children: \"Post Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"* Indicates Required Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(NewQuestionForm, \"0PHYKC9FaUtPtMAnY8nOv31uh50=\");\n_c = NewQuestionForm;\nexport default NewQuestionForm;\nvar _c;\n$RefreshReg$(_c, \"NewQuestionForm\");","map":{"version":3,"names":["React","useState","useContext","axios","UserContext","jsxDEV","_jsxDEV","NewQuestionForm","onQuestionPosted","_s","title","setTitle","summary","setSummary","text","setText","tags","setTags","username","setUsername","errors","setErrors","user","validateForm","isValid","length","tagList","split","some","tag","hyperlinkRegex","matches","matchAll","invalidLinks","filter","match","url","startsWith","handleSubmit","event","preventDefault","questionData","asked_by","post","error","console","prevErrors","form","id","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","style","color","_c","$RefreshReg$"],"sources":["/Users/michaelliebs/pa04-bananaboys/client/src/components/NewQuestionForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\n\nfunction NewQuestionForm({ onQuestionPosted }) {\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [text, setText] = useState('');\n  const [tags, setTags] = useState('');\n  const [username, setUsername] = useState('');\n  const [errors, setErrors] = useState({});\n\n  const { user } = useContext(UserContext);\n\n  const validateForm = () => {\n    let isValid = true;\n    let errors = {};\n\n    if (!title || title.length > 50) {\n      errors.title = 'The question title cannot be empty and should not exceed 50 characters.';\n      isValid = false;\n    }\n\n    if (!summary || summary.length > 140) {\n      errors.summary = 'The question summary cannot be empty and should not exceed 140 characters.';\n      isValid = false;\n    }\n\n    if (!text) {\n      errors.text = 'The question text cannot be empty.';\n      isValid = false;\n    }\n\n    const tagList = tags.split(/\\s+/);\n    if (!tags || (tagList.length > 5 || tagList.some(tag => tag.length > 20 || tag.split('-').length > 2))) {\n      errors.tags = 'Cannot be empty. No more than 5 tags, each not exceeding 20 characters. Hyphenated words count as one word.';\n      isValid = false;\n    }\n\n    //hyperlinks validation check\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\(([^\\s)]*)\\)/g;\n    const matches = [...text.matchAll(hyperlinkRegex)];\n    const invalidLinks = matches.filter(match => {\n      const text = match[1];\n      const url = match[2];\n      return text === '' || (!url.startsWith('http://') && !url.startsWith('https://'));\n    });\n    if (invalidLinks.length > 0) {\n      errors.text = (errors.text || '') + ' All hyperlinks must start with \"http://\" or \"https://\" and must not be empty.';\n      isValid = false;\n    }\n\n    setErrors(errors);\n    return isValid;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (validateForm()) {\n        const questionData = {\n            title: title,\n            summary: summary,\n            text: text,\n            tags: tags.split(/\\s+/),\n            asked_by: username\n        };\n        try {\n            await axios.post('http://localhost:8000/questions', questionData);\n            onQuestionPosted();\n        } catch (error) {\n            console.error('Error posting question:', error);\n            setErrors(prevErrors => ({ ...prevErrors, form: 'Failed to post the question.' }));\n        }\n    }\n};\n\n  return (\n    <div id=\"new-question-container\" className=\"new-question-form\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"question-title\">Question Title*</label>\n        <input type=\"text\" id=\"question-title\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Limit title to 50 characters or less\"/>\n        {errors.title && <div className=\"error-message\">{errors.title}</div>}\n\n        <label htmlFor=\"question-summary\">Question Summary*</label>\n        <textarea type=\"text\" id=\"question-summary\" value={summary} onChange={(e) => setSummary(e.target.value)} placeholder=\"Limit summary to 140 characters or less\"/>\n        {errors.summary && <div className=\"error-message\">{errors.summary}</div>}\n\n        <label htmlFor=\"question-text\">Question Text*</label>\n        <textarea id=\"question-text\" value={text} onChange={(e) => {setText(e.target.value); setUsername(user.username);}} placeholder=\"Add details\"></textarea>\n        {errors.text && <div className=\"error-message\">{errors.text}</div>}\n\n        <label htmlFor=\"question-tags\">Tags*</label>\n        <input type=\"text\" id=\"question-tags\" value={tags} onChange={(e) => setTags(e.target.value)} placeholder=\"Add keywords separated by whitespace\"/>\n        {errors.tags && <div className=\"error-message\">{errors.tags}</div>}\n\n        <button type=\"submit\" id=\"post-question\">Post Question</button>\n        <p style={{color: 'red'}}>* Indicates Required Field</p>\n      </form>\n    </div>\n  );\n}\n\nexport default NewQuestionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}