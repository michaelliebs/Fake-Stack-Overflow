{"ast":null,"code":"var _jsxFileName = \"/Users/michaelliebs/pa04-bananaboys/client/src/components/NewQuestionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewQuestionForm({\n  onQuestionPosted\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [tags, setTags] = useState('');\n  const [username, setUsername] = useState('');\n  const [errors, setErrors] = useState({});\n  const validateForm = () => {\n    let isValid = true;\n    let errors = {};\n    if (!title || title.length > 100) {\n      errors.title = 'The question title cannot be empty and should not exceed 100 characters.';\n      isValid = false;\n    }\n    if (!text) {\n      errors.text = 'The question text cannot be empty.';\n      isValid = false;\n    }\n    const tagList = tags.split(/\\s+/);\n    if (!tags || tagList.length > 5 || tagList.some(tag => tag.length > 20 || tag.split('-').length > 2)) {\n      errors.tags = 'Cannot be empty. No more than 5 tags, each not exceeding 20 characters. Hyphenated words count as one word.';\n      isValid = false;\n    }\n    if (!username) {\n      errors.username = 'Username cannot be empty.';\n      isValid = false;\n    }\n    //hyperlinks validation check\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\(([^\\s)]*)\\)/g;\n    const matches = [...text.matchAll(hyperlinkRegex)];\n    const invalidLinks = matches.filter(match => {\n      const text = match[1];\n      const url = match[2];\n      return text === '' || !url.startsWith('http://') && !url.startsWith('https://');\n    });\n    if (invalidLinks.length > 0) {\n      errors.text = (errors.text || '') + ' All hyperlinks must start with \"http://\" or \"https://\" and must not be empty.';\n      isValid = false;\n    }\n    setErrors(errors);\n    return isValid;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (validateForm()) {\n      const questionData = {\n        title: title,\n        text: text,\n        tags: tags.split(/\\s+/),\n        asked_by: username\n      };\n      try {\n        await axios.post('http://localhost:8000/questions', questionData);\n        onQuestionPosted();\n      } catch (error) {\n        console.error('Error posting question:', error);\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          form: 'Failed to post the question.'\n        }));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"new-question-container\",\n    className: \"new-question-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question-title\",\n        children: \"Question Title*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"question-title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Limit title to 100 characters or less\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question-text\",\n        children: \"Question Text*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"question-text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Add details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), errors.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question-tags\",\n        children: \"Tags*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"question-tags\",\n        value: tags,\n        onChange: e => setTags(e.target.value),\n        placeholder: \"Add keywords separated by whitespace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), errors.tags && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"post-question\",\n        children: \"Post Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"* Indicates Required Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(NewQuestionForm, \"GqdwANtG9r6sIsdrvccps6pW1V4=\");\n_c = NewQuestionForm;\nexport default NewQuestionForm;\nvar _c;\n$RefreshReg$(_c, \"NewQuestionForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NewQuestionForm","onQuestionPosted","_s","title","setTitle","text","setText","tags","setTags","username","setUsername","errors","setErrors","validateForm","isValid","length","tagList","split","some","tag","hyperlinkRegex","matches","matchAll","invalidLinks","filter","match","url","startsWith","handleSubmit","event","preventDefault","questionData","asked_by","post","error","console","prevErrors","form","id","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","style","color","_c","$RefreshReg$"],"sources":["/Users/michaelliebs/pa04-bananaboys/client/src/components/NewQuestionForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\n\nfunction NewQuestionForm({ onQuestionPosted }) {\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [tags, setTags] = useState('');\n  const [username, setUsername] = useState('');\n  const [errors, setErrors] = useState({});\n\n  const validateForm = () => {\n    let isValid = true;\n    let errors = {};\n\n    if (!title || title.length > 100) {\n      errors.title = 'The question title cannot be empty and should not exceed 100 characters.';\n      isValid = false;\n    }\n\n    if (!text) {\n      errors.text = 'The question text cannot be empty.';\n      isValid = false;\n    }\n\n    const tagList = tags.split(/\\s+/);\n    if (!tags || (tagList.length > 5 || tagList.some(tag => tag.length > 20 || tag.split('-').length > 2))) {\n      errors.tags = 'Cannot be empty. No more than 5 tags, each not exceeding 20 characters. Hyphenated words count as one word.';\n      isValid = false;\n    }\n\n    if (!username) {\n      errors.username = 'Username cannot be empty.';\n      isValid = false;\n    }\n    //hyperlinks validation check\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\(([^\\s)]*)\\)/g;\n    const matches = [...text.matchAll(hyperlinkRegex)];\n    const invalidLinks = matches.filter(match => {\n      const text = match[1];\n      const url = match[2];\n      return text === '' || (!url.startsWith('http://') && !url.startsWith('https://'));\n    });\n    if (invalidLinks.length > 0) {\n      errors.text = (errors.text || '') + ' All hyperlinks must start with \"http://\" or \"https://\" and must not be empty.';\n      isValid = false;\n    }\n\n    setErrors(errors);\n    return isValid;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (validateForm()) {\n        const questionData = {\n            title: title,\n            text: text,\n            tags: tags.split(/\\s+/),\n            asked_by: username\n        };\n        try {\n            await axios.post('http://localhost:8000/questions', questionData);\n            onQuestionPosted();\n        } catch (error) {\n            console.error('Error posting question:', error);\n            setErrors(prevErrors => ({ ...prevErrors, form: 'Failed to post the question.' }));\n        }\n    }\n};\n\n  return (\n    <div id=\"new-question-container\" className=\"new-question-form\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"question-title\">Question Title*</label>\n        <input type=\"text\" id=\"question-title\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Limit title to 100 characters or less\"/>\n        {errors.title && <div className=\"error-message\">{errors.title}</div>}\n\n        <label htmlFor=\"question-text\">Question Text*</label>\n        <textarea id=\"question-text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Add details\"></textarea>\n        {errors.text && <div className=\"error-message\">{errors.text}</div>}\n\n        <label htmlFor=\"question-tags\">Tags*</label>\n        <input type=\"text\" id=\"question-tags\" value={tags} onChange={(e) => setTags(e.target.value)} placeholder=\"Add keywords separated by whitespace\"/>\n        {errors.tags && <div className=\"error-message\">{errors.tags}</div>}\n\n        <label htmlFor=\"username\">Username*</label>\n        <input type=\"text\" id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Your username\"/>\n        {errors.username && <div className=\"error-message\">{errors.username}</div>}\n\n        <button type=\"submit\" id=\"post-question\">Post Question</button>\n        <p style={{color: 'red'}}>* Indicates Required Field</p>\n      </form>\n    </div>\n  );\n}\n\nexport default NewQuestionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}