{"ast":null,"code":"var _jsxFileName = \"/Users/michaelliebs/pa04-bananaboys/client/src/components/CommentDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  questionId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [startIndex, setStartIndex] = useState(0);\n\n  // Fetch all comments\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        await axios.get(`http://localhost:8000/questions/${questionId}/comments`).then(response => {\n          const sortedComments = response.data.sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n          setComments(sortedComments);\n        });\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n  }, [questionId, comments.length]);\n\n  // Handle new comment submission\n  const handleCommentSubmit = async e => {\n    try {\n      if (e.key === 'Enter' && newComment.trim()) {\n        axios.post(`http://localhost:8000/questions/${questionId}/comments`, {\n          text: newComment,\n          ans_by: 'Anonymous'\n        }).then(() => {\n          setNewComment('');\n          // Refresh comments to include the new one\n          axios.get(`http://localhost:8000/questions/${questionId}/comments`).then(response => setComments(response.data)).catch(error => console.error('Error fetching comments:', error));\n          setStartIndex(0);\n        });\n      }\n    } catch (error) {\n      alert('Error posting comment: ' + error.response.data);\n    }\n  };\n\n  // Upvote a comment\n  const handleUpvote = async commentId => {\n    try {\n      await axios.put(`http://localhost:8000/comments/${commentId}/upvote`).then(() => {\n        // Refresh comments to include the new one\n        axios.get(`http://localhost:8000/questions/${questionId}/comments`).then(response => {\n          const sortedComments = response.data.sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n          setComments(sortedComments);\n        }).catch(error => console.error('Error fetching comments:', error));\n        setStartIndex(startIndex);\n      });\n    } catch (error) {\n      console.error('Error upvoting comment:', error);\n    }\n  };\n  const handleNextClick = () => {\n    if (startIndex + 3 >= comments.length) {\n      setStartIndex(0);\n    } else setStartIndex(startIndex + 3);\n  };\n  const handlePrevClick = () => {\n    setStartIndex(startIndex - 3);\n  };\n\n  // Render comments with upvote buttons\n  const renderComments = () => {\n    if (comments.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0 calc(2.5%) 0 calc(2.5%)',\n          color: 'gray'\n        },\n        children: \"No comments here yet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this);\n    }\n    const paginatedComments = comments.slice(startIndex, startIndex + 3);\n    return paginatedComments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [comment.text, \" - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: comment.ans_by\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }, this), \" (\", comment.votes, \" votes)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpvote(comment._id),\n        children: \"Upvote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this));\n  };\n  const renderPaginatedComments = () => {\n    if (comments.length <= 3) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-answer-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevClick,\n          disabled: startIndex === 0,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextClick,\n          disabled: comments.length <= 3,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-comments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: 'Question Comments'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-comments\",\n      children: renderComments()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-comments-form\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        onKeyDown: handleCommentSubmit,\n        placeholder: \"Add a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-buttons\",\n      children: renderPaginatedComments()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"5QWFmzJy+oOUrqbqr7Uh313NX2s=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Comments","questionId","_s","comments","setComments","newComment","setNewComment","startIndex","setStartIndex","fetchComments","get","then","response","sortedComments","data","sort","a","b","Date","ans_date_time","error","console","length","handleCommentSubmit","e","key","trim","post","text","ans_by","catch","alert","handleUpvote","commentId","put","handleNextClick","handlePrevClick","renderComments","style","margin","color","children","fileName","_jsxFileName","lineNumber","columnNumber","paginatedComments","slice","map","comment","className","votes","onClick","_id","renderPaginatedComments","disabled","value","onChange","target","onKeyDown","placeholder","_c","$RefreshReg$"],"sources":["/Users/michaelliebs/pa04-bananaboys/client/src/components/CommentDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../stylesheets/index.css';\nimport axios from 'axios';\n\nconst Comments = ({ questionId }) => {\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    const [startIndex, setStartIndex] = useState(0);\n\n\n    // Fetch all comments\n    useEffect(() => {\n        const fetchComments = async () => {\n            try {\n                await axios.get(`http://localhost:8000/questions/${questionId}/comments`)\n                    .then(response => {\n                        const sortedComments = response.data.sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n                        setComments(sortedComments);\n                    })\n                \n            } catch (error) { console.error('Error fetching comments:', error); }\n        }\n        fetchComments();\n    }, [questionId, comments.length]);\n\n    // Handle new comment submission\n    const handleCommentSubmit = async (e) => {\n        try {\n            if (e.key === 'Enter' && newComment.trim()) {\n                axios.post(`http://localhost:8000/questions/${questionId}/comments`, { text: newComment, ans_by: 'Anonymous' })\n                .then(() => {\n                    setNewComment('');\n                    // Refresh comments to include the new one\n                    axios.get(`http://localhost:8000/questions/${questionId}/comments`)\n                        .then(response => setComments(response.data))\n                        .catch(error => console.error('Error fetching comments:', error));\n                    setStartIndex(0);\n                })}\n        } catch (error) {alert('Error posting comment: ' + error.response.data)}\n    };\n\n    // Upvote a comment\n    const handleUpvote = async (commentId) => {\n        try {\n            await axios.put(`http://localhost:8000/comments/${commentId}/upvote`)\n            .then(() => {\n                // Refresh comments to include the new one\n                axios.get(`http://localhost:8000/questions/${questionId}/comments`)\n                .then(response => {\n                    const sortedComments = response.data.sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n                    setComments(sortedComments);\n                })\n                .catch(error => console.error('Error fetching comments:', error));\n                setStartIndex(startIndex);\n            })\n        } catch (error) { console.error('Error upvoting comment:', error); }\n    };\n\n    const handleNextClick = () => {\n        if (startIndex + 3 >= comments.length) {\n          setStartIndex(0);\n        }\n        else\n          setStartIndex(startIndex + 3);\n      };\n    \n      const handlePrevClick = () => {\n        setStartIndex(startIndex - 3);\n      };\n\n    // Render comments with upvote buttons\n    const renderComments = () => {\n        if (comments.length === 0) {\n            return <p style={{ margin: '0 calc(2.5%) 0 calc(2.5%)', color: 'gray' }}>No comments here yet...</p>;\n        }\n        const paginatedComments = comments.slice(startIndex, startIndex + 3);\n        return paginatedComments.map(comment => (\n            <div key={comment._id} className='question-comment'>\n                <p>{comment.text} - <strong>{comment.ans_by}</strong> ({comment.votes} votes)</p>\n                <button onClick={() => handleUpvote(comment._id)}>Upvote</button>\n            </div>\n        ));\n    };\n\n    const renderPaginatedComments = () => {\n        if (comments.length <= 3) {\n          return null;\n        }\n        return (\n          <div className=\"sub-answer-list\">\n            <div className=\"pagination-buttons\">\n              <button onClick={handlePrevClick} disabled={startIndex === 0}>Prev</button>\n              <button onClick={handleNextClick} disabled={comments.length <= 3}>Next</button>\n            </div>\n          </div>\n        )};\n\n    return (\n        <div className='question-comments-container'>\n            <h3>{'Question Comments'}</h3>\n            <div className='question-comments'>\n                {renderComments()}\n            </div>\n            <div className='question-comments-form'>\n                <input \n                    value={newComment} \n                    onChange={(e) => setNewComment(e.target.value)} \n                    onKeyDown={handleCommentSubmit} \n                    placeholder=\"Add a comment\" />\n            </div>\n            <div className='pagination-buttons'>\n                {renderPaginatedComments()}\n            </div>\n        </div>\n    );\n}\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}